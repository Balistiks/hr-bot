from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext

from bot import keyboards
from bot.services import users_service
from bot.states import RegisterState
from bot.misc.configuration import conf

from .messages import menu

callbacks_router = Router()


cities_videos = {
    '–°–µ–ª—è—Ç–∏–Ω–æ': 'https://vk.com/video-109222908_456239897',
    '–î–æ–ª–≥–æ–ø—Ä—É–¥–Ω—ã–π': 'https://vk.com/clip-109222908_456239915',
    '–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥': 'https://vk.com/clip-118559346_456239175',
    '–ó–≤–µ–Ω–∏–≥–æ—Ä–æ–¥': 'https://vk.com/video-109222908_456239892',
    '–í–∏–¥–Ω–æ–µ': 'https://vk.com/clip-130473966_456239913',
}


@callbacks_router.callback_query(RegisterState.city)
async def get_city(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.delete()
    await state.set_state(None)
    await state.update_data(city=callback.data)

    await callback.message.answer_photo(
        photo=types.FSInputFile(
            'files/photos/timur.jpg',
        ),
        caption='–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç –¢–∏–º—É—Ä –ò–ª—å–¥—É—Å–æ–≤–∏—á! \n'
        '\n–Ø –≥–µ–Ω–µ—Ä–∞–ª—å–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏ —Å–∞–ª–æ–Ω–æ–≤ –∫—Ä–∞—Å–æ—Ç—ã "–¶–∏—Ä—é–ª—å–Ω–∏–∫–™" üíÖüèΩ\n'
        '\n–ó–∞–ø–∏—Å–∞–ª –¥–ª—è —Ç–µ–±—è –≤–∏–¥–µ–æ, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—á—É –ø–æ–±–ª–∏–∂–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å —Ç–µ–±—è —Å –∫–æ–º–ø–∞–Ω–∏–µ–π ü§ù',
        reply_markup=keyboards.applicant.get_continue_url_keyboard(
            '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ',
            'https://vk.com/video-109222908_456239893',
            'tg_channel'
        )
    )


@callbacks_router.callback_query(F.data == 'tg_channel')
async def send_tg_channel(callback: types.CallbackQuery):
    await callback.message.delete()
    await callback.message.answer(
        '–î–∞–≤–∞–π —Å–≤–µ—Ä–∏–º—Å—è, —á—Ç–æ —Ç—ã –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª —Å –≤–∞–∫–∞–Ω—Å–∏—è–º–∏ üì±',
        reply_markup=keyboards.applicant.get_channel_keyboard(conf.bot.channel_url, 'salon')
    )


@callbacks_router.callback_query(F.data == 'salon')
async def send_salon(callback: types.CallbackQuery):
    user_channel_status = await callback.bot.get_chat_member(chat_id=conf.bot.channel, user_id=callback.from_user.id)
    if user_channel_status.status != 'left':
        await callback.message.delete()
        await callback.message.answer(
            '–ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –Ω–∞—à–∏–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–º –ø–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—É - –û–ª—å–≥–æ–π üëãüèª',
            reply_markup=keyboards.applicant.get_continue_url_keyboard(
                '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å',
                'https://vk.com/video-109222908_456239918',
                'city',
            )
        )
    else:
        await send_tg_channel(callback)


@callbacks_router.callback_query(F.data == 'city')
async def send_city(callback: types.CallbackQuery, state: FSMContext):
    data = await state.get_data()
    await callback.message.delete()
    await callback.message.answer(
        '–í–∏–¥–µ–æ –ø—Ä–æ —Ç–≤–æ–π –≥–æ—Ä–æ–¥ üìç',
        reply_markup=keyboards.applicant.get_continue_url_keyboard(
            '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å',
            cities_videos[data['city']],
            'menu',
        )
    )


@callbacks_router.callback_query(F.data == 'menu')
async def send_menu(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.delete()
    data = await state.get_data()
    await users_service.create({
        'userName': callback.from_user.username,
        'tgId': callback.from_user.id,
        'name': data['name'],
        'phoneNumber': data['phone_number'],
        'city': data['city']
    })
    await state.clear()
    await menu(callback.message, state)
